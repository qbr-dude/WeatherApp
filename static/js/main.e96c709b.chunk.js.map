{"version":3,"sources":["API/FetchWeather.js","components/UI/Button.jsx","components/Info/AddInfo.jsx","components/Info/Info.jsx","components/Info/OtherInfo.jsx","components/Info/Temperature.jsx","components/UI/Input.jsx","components/SearchField.jsx","components/InfoField.jsx","components/TimeField.jsx","App.jsx","index.js"],"names":["PostService","city","url","axios","get","response","data","console","log","Button","text","click","className","onClick","title","AddInfo","useState","currentValue","setCurrentValue","infoData","setInfoData","changeValue","value","useEffect","loading","Pressure","main","pressure","Humidity","humidity","Info","cityInfo","setCityInfo","convertTime","unix","date","Date","hours","getHours","minutes","getMinutes","seconds","getSeconds","substr","name","lon","coord","lat","time","dt","sunrise","sys","sunset","weather","id","OtherInfo","windSpeed","wind","speed","windDeg","deg","clouds","all","Temperature","temperature","setTemperature","unit","setUnit","empty","Math","round","temp","Input","setValue","type","onChange","event","target","onBlur","placeholder","SearchField","fetch","searchActive","setSearchActive","handleSearchForm","searchField","document","getElementById","searchBtn","style","width","classList","toggle","querySelector","focus","fieldInfoWidth","clientWidth","onSubmit","preventDefault","handleSubmit","InfoField","currentData","setCurrentData","fetchData","selectedCity","a","getData","_data","TimeField","now","currentTime","setCurrentTime","interval","setInterval","clearInterval","getHumanTime","App","ReactDOM","render"],"mappings":"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","file":"static/js/main.e96c709b.chunk.js","sourcesContent":["import axios from 'axios';\r\n\r\nexport default class PostService {\r\n\r\n    static async getData({ city }) {\r\n        const apiKey = '500234efe4c3bb2da37f15a6c2467041';\r\n        const url = `https://api.openweathermap.org/data/2.5/weather?q=${city}&units=metric&appid=${apiKey}`;\r\n        try {\r\n            const response = await axios.get(url);\r\n            return response.data;\r\n        } catch (error) {\r\n            console.log(error);\r\n        }\r\n    }\r\n}\r\n","import React from 'react';\r\n\r\nconst Button = ({ text, click }) => {\r\n    return (\r\n        <button className=\"cursor-pointer p-1 bg-white bg-opacity-10\r\n                            hover:bg-opacity-30 flex-50 mx-1\"\r\n            onClick={() => click(text)}\r\n            title={text}>\r\n            {text}\r\n        </button>\r\n    );\r\n}\r\n\r\nexport default Button;\r\n","import React, { useState, useEffect } from 'react';\r\nimport Button from '../UI/Button';\r\n\r\nconst AddInfo = ({ data }) => {\r\n    const [currentValue, setCurrentValue] = useState('Pressure');\r\n    const [infoData, setInfoData] = useState({ 'pressure': \"\" });\r\n\r\n    useEffect(() => {\r\n        if (data.loading) return;\r\n\r\n        setInfoData({\r\n            Pressure: data.main.pressure + \" hPa\",\r\n            Humidity: data.main.humidity + \"%\",\r\n        });\r\n    }, [data]);\r\n\r\n    function changeValue(value) {\r\n        if (currentValue === value) return;\r\n\r\n        setCurrentValue(value);\r\n    }\r\n\r\n    return (\r\n        <div className=\"flex flex-col h-full items-center pt-1 border-l-2 border-white flex-grow-1 flex-6 pl-2 mr-2 text-white text-lg relative\">\r\n            <span className=\"font-bold 2xl:text-xl\">{currentValue}</span>\r\n            <div className=\"p-2 mt-2 flex items-center text-2xl\">\r\n                <span>{infoData[currentValue]}</span>\r\n            </div>\r\n            <div className=\"flex absolute bottom-2\">\r\n                <Button text=\"Pressure\" click={changeValue} />\r\n                <Button text=\"Humidity\" click={changeValue} />\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default AddInfo;\r\n","import React, { useState, useEffect } from 'react';\r\n\r\nconst Info = ({ data }) => {\r\n    const [cityInfo, setCityInfo] = useState({});\r\n\r\n    useEffect(() => {\r\n        if (data.loading) return;\r\n\r\n        setCityInfo({\r\n            name: data.name,\r\n            lon: data.coord.lon,\r\n            lat: data.coord.lat,\r\n            time: data.dt,\r\n            sunrise: data.sys.sunrise,\r\n            sunset: data.sys.sunset,\r\n            weather: data.weather[0].main,\r\n        });\r\n    }, [data]);\r\n\r\n    function convertTime(unix) {\r\n        let date = new Date(unix * 1000);\r\n        let hours = date.getHours();\r\n        let minutes = \"0\" + date.getMinutes();\r\n        let seconds = \"0\" + date.getSeconds();\r\n        let formattedTime = hours + ':' + minutes.substr(-2) + ':' + seconds.substr(-2);\r\n\r\n        return formattedTime;\r\n    }\r\n\r\n    return (\r\n        <div className=\"flex flex-col items-center pt-1 flex-grow-2 flex-15 h-full text-white text-lg\" id=\"field-info\">\r\n            <span className=\"font-bold 2xl:text-xl\">Information - <span className=\"underline\">{cityInfo.name}</span></span>\r\n            <div className=\"flex flex-col w-11/12 h-4/6 justify-between mt-3\">\r\n                <div className=\"flex justify-between\">\r\n                    <div className=\"w-1/2\"><span className=\"underline\">City Time:</span><span> &nbsp;{convertTime(cityInfo.time)}</span></div>\r\n                    <div className=\"w-1/2\"><span className=\"underline\">Weather:</span><span> &nbsp;{cityInfo.weather}</span></div>\r\n                </div>\r\n                <div className=\"flex justify-between\">\r\n                    <div className=\"w-1/2\"><span className=\"underline\">Sunrise at:</span><span> &nbsp;{convertTime(cityInfo.sunrise)}</span></div>\r\n                    <div className=\"w-1/2\"><span className=\"underline\">Sunset at:</span><span> &nbsp;{convertTime(cityInfo.sunset)}</span></div>\r\n                </div>\r\n                <div className=\"flex justify-between\">\r\n                    <div className=\"w-1/2\"><span className=\"underline\">Longitude:</span><span> &nbsp;{cityInfo.lon}</span></div>\r\n                    <div className=\"w-1/2\"><span className=\"underline\">Latitude:</span><span> &nbsp;{cityInfo.lat}</span></div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Info;\r\n","import React, { useState, useEffect } from 'react';\r\n\r\nconst OtherInfo = ({ data }) => {\r\n    const [infoData, setInfoData] = useState({});\r\n\r\n    useEffect(() => {\r\n        if (data.loading) return;\r\n        setInfoData({\r\n            windSpeed: data.wind.speed,\r\n            windDeg: data.wind.deg,\r\n            clouds: data.clouds.all,\r\n        });\r\n    }, [data]);\r\n\r\n    return (\r\n        <div className=\"flex flex-col h-full items-center pt-1 border-l-2 border-white flex-grow-1 flex-6 pl-2 mr-2 text-white text-lg relative\">\r\n            <span className=\"font-bold 2xl:text-xl\">Addition Information</span>\r\n            <div className=\"flex flex-col w-11/12 h-1/2 justify-between m-3\">\r\n                <div><span className=\"underline\">Clouds:</span><span> &nbsp;{infoData.clouds}%</span></div>\r\n                <div><span className=\"underline\">Wind speed:</span><span> &nbsp;{infoData.windSpeed} m/s</span></div>\r\n                <div><span className=\"underline\">Wind degree:</span><span> &nbsp;{infoData.windDeg}&deg;</span></div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default OtherInfo;\r\n","import React, { useState, useEffect } from 'react';\r\nimport Button from '../UI/Button';\r\n\r\nconst Temperature = ({ data }) => {\r\n    const [temperature, setTemperature] = useState('');\r\n    const [unit, setUnit] = useState('ºC');\r\n\r\n    useEffect(() => {\r\n        if (data.loading) return;\r\n        setTemperature(Math.round(data.main.temp));\r\n    }, [data]);\r\n\r\n    function changeUnit() {\r\n        if (unit === 'ºC') {\r\n            setUnit('ºF');\r\n            setTemperature(Math.round(temperature * (9 / 5) + 32));\r\n        }\r\n        else {\r\n            setUnit('ºC');\r\n            setTemperature(Math.round((temperature - 32) * (5 / 9)));\r\n        }\r\n    }\r\n\r\n    function empty() { }\r\n\r\n    return (\r\n        <div className=\"flex flex-col items-center pt-1 mr-2 border-l-2 border-white flex-6 flex-grow-1 pl-2 h-full text-white text-lg relative\">\r\n            <span className=\"font-bold 2xl:text-xl\">Temperature</span>\r\n            <div className=\"p-2 mt-2 flex items-center text-2xl\">\r\n                <span>{temperature}</span>\r\n                <Button text={unit} click={changeUnit} />\r\n            </div>\r\n            <div className=\"flex absolute bottom-2 justify-between w-11/12\">\r\n                <Button text=\"Today\" click={empty} />\r\n                <Button text=\"Tomorrow\" click={empty} />\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Temperature;\r\n","import React, { useState } from 'react';\r\n\r\nconst Input = () => {\r\n    const [value, setValue] = useState('');\r\n\r\n    return (\r\n        <input type=\"text\"\r\n            value={value}\r\n            onChange={(event) => setValue(event.target.value)}\r\n            onBlur={() => setValue('')} placeholder=\"Enter City\"\r\n            className=\"px-1 w-11/12 h-full bg-black bg-opacity-50 text-2xl text-white\" />\r\n    );\r\n}\r\n\r\nexport default Input;\r\n","import React, { useState } from 'react';\r\nimport Input from './UI/Input';\r\n\r\nconst SearchField = ({ fetch }) => {\r\n    const [searchActive, setSearchActive] = useState(false);\r\n\r\n    function handleSubmit(event) {\r\n        if (!searchActive) return;\r\n\r\n        event.preventDefault();\r\n        const value = event.target[0].value;\r\n        if (value) {\r\n            setSearchActive(false);\r\n            handleSearchForm();\r\n            fetch(value);\r\n        }\r\n    }\r\n\r\n    function handleSearchForm() {\r\n        const searchField = document.getElementById('search-field');\r\n        const searchBtn = document.getElementById('search-btn');\r\n\r\n        if (!searchActive) {\r\n            setSearchActive(true);\r\n            document.querySelector('#search-field form input').focus();\r\n            const fieldInfoWidth = document.getElementById('field-info').clientWidth;\r\n            searchField.style.width = fieldInfoWidth - 5 + 'px';\r\n            searchField.classList.toggle('opacity-100');\r\n            searchBtn.classList.toggle('hidden');\r\n        } else {\r\n            setSearchActive(false);\r\n            searchField.style.width = 0;\r\n            searchField.classList.toggle('opacity-100');\r\n            searchBtn.classList.toggle('hidden');\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div className=\"flex absolute bottom-full p-1 bg-white bg-opacity-70\" style={{}}>\r\n            <div className=\"flex w-0 transition-width duration-300 opacity-0\" id=\"search-field\">\r\n                <form onSubmit={(event) => handleSubmit(event)} className=\"w-full\">\r\n                    <Input />\r\n                </form>\r\n                <button onClick={() => handleSearchForm()} className=\"bg-close bg-cover bg-center w-0 h-10 px-5\" />\r\n            </div>\r\n            <button onClick={() => handleSearchForm()} className=\"transition delay-300 bg-search bg-cover bg-center w-10 h-10 px-5\" id=\"search-btn\" title=\"Select another City\" />\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default SearchField;\r\n","import React, { useEffect, useState } from 'react';\r\nimport PostService from '../API/FetchWeather';\r\nimport AddInfo from './Info/AddInfo';\r\nimport Info from './Info/Info';\r\nimport OtherInfo from './Info/OtherInfo';\r\nimport Temperature from './Info/Temperature';\r\nimport SearchField from './SearchField';\r\n\r\nconst InfoField = () => {\r\n    const [currentData, setCurrentData] = useState();\r\n\r\n    useEffect(() => {\r\n        fetchData();\r\n    }, []);\r\n\r\n    async function fetchData(selectedCity) {\r\n        const city = selectedCity ? selectedCity : 'Moscow';\r\n        const _data = await PostService.getData({ city });\r\n        setCurrentData(_data);\r\n    }\r\n\r\n    return (\r\n        <div className=\"flex flex-col absolute bottom-0 w-full h-1/4\r\n                        xl:h-1/5\">\r\n            <SearchField fetch={fetchData} />\r\n            <div className=\"flex w-full h-full justify-between bg-black bg-opacity-50 backdrop-filter backdrop-blur-sm flex-wrap\">\r\n                <Info data={currentData ? currentData : { loading: true }} />\r\n                <Temperature data={currentData ? currentData : { loading: true }} />\r\n                <AddInfo data={currentData ? currentData : { loading: true }} />\r\n                <OtherInfo data={currentData ? currentData : { loading: true }} />\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default InfoField;\r\n","import React, { useEffect, useState } from 'react';\r\n\r\nconst TimeField = () => {\r\n    const [currentTime, setCurrentTime] = useState(Date.now());\r\n\r\n    useEffect(() => {\r\n        const interval = setInterval(() => {\r\n            setCurrentTime(Date.now());\r\n        }, 1000);\r\n        return () => clearInterval(interval);\r\n    }, []);\r\n\r\n\r\n    function getHumanTime() {\r\n        let date = new Date(currentTime);\r\n        let hours = date.getHours();\r\n        let minutes = \"0\" + date.getMinutes();\r\n        let seconds = \"0\" + date.getSeconds();\r\n        return hours + ':' + minutes.substr(-2) + ':' + seconds.substr(-2);\r\n    }\r\n\r\n    return (\r\n        <div className=\"fixed top-5 right-5 p-3 text-4xl text-white bg-black backdrop-filter backdrop-blur-sm bg-opacity-50\">\r\n            <span>{getHumanTime()}</span>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default TimeField;\r\n","import React from 'react';\r\nimport InfoField from './components/InfoField';\r\nimport TimeField from './components/TimeField';\r\n\r\nconst App = () => {\r\n\r\n    return (\r\n        <div className={\"bg-mountain w-screen h-screen relative bg-center bg-cover\"}>\r\n            <TimeField />\r\n            <InfoField />\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\nimport './index.css'\r\n\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));"],"sourceRoot":""}